import{t as g,a as C}from"./disclose-version.Dw_O2kA8.js";import{p as P,g as e,e as r,u as _,t as h,c as k,d as w,r as M}from"./runtime.D8p1NF4P.js";import{P as n,s as b}from"./plotly.min.wzrcMcfF.js";import{p as a}from"./props.BCsUPI07.js";import{o as A}from"./index-client.v0nErfSU.js";import{d as m,i as D,a as G}from"./api.Cnw3Ux_m.js";var I=g('<div class="w-full"><div></div></div>');function q(u,t){P(t,!0),a(t,"states",19,()=>[]),a(t,"stateColors",19,()=>({})),a(t,"fallback",3,!1);let x=a(t,"displayXAxisGap",3,30),l=a(t,"defaultColor",7,m),i=a(t,"plotId",3,"lineplot");D(l())||l(m);let s=r(()=>[{x:t.x,y:t.y,mode:"lines",line:{color:l()}}]),d=r(()=>({title:t.title,xaxis:{title:t.xaxis,tickvals:t.x,ticktext:t.x.map((v,y)=>y%x()===0?G(v):"")},yaxis:{title:t.yaxis,...t.yRange?{range:t.yRange}:{}}}));const f={responsive:!0};A(()=>{n.newPlot(i(),e(s),e(d),f)}),_(()=>{n.newPlot(i(),e(s),e(d),f)});var o=I(),c=k(o);M(o),h(()=>b(c,"id",i())),C(u,o),w()}export{q as L};
